{
	"info": {
		"_postman_id": "88d40287-a0df-4c41-9fdb-03040f133c30",
		"name": "Resola",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6687650"
	},
	"item": [
		{
			"name": "USS",
			"item": [
				{
					"name": "\bCreating a new app with valid information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Validate response body\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.name).to.eql(\"updated_name\");\r",
									"    pm.expect(jsonData.data.description).to.eql(\"updated_description\");\r",
									"    pm.expect(jsonData.data.status).to.eql(\"disabled\");\r",
									"});\r",
									"pm.test(\"Get appId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"\bappId\", jsonData.data.id);\r",
									"    console.log(pm.collectionVariables.get(\"\bappId\"))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Synalio\",\r\n  \"description\": \"Synalio default for all companies and apps\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creating a new app with \"name\" is out of range 3-48 characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ab\",\r\n  \"description\": \"Synalio default for all companies and apps\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creating a new app with \"description\" is out of range 3-128 characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Synalio\",\r\n  \"description\": \"ab\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creating a new app with an invalid url",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Synalio\",\r\n  \"description\": \"Synalio default for all companies and apps\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}_invalid/api/v1/apps",
							"host": [
								"{{base_url}}_invalid"
							],
							"path": [
								"api",
								"v1",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting app by a valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.name).to.eql(\"Synalio\");",
									"    pm.expect(jsonData.data.status).to.eql(\"enabled\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{appId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{appId}}"
							],
							"query": [
								{
									"key": "daysToAutoTerm",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting app by an invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/4323c1da1a574acda5278bd0837297f6INVALID",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"4323c1da1a574acda5278bd0837297f6INVALID"
							],
							"query": [
								{
									"key": "daysToAutoTerm",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating app detail with valid information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Validate response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.name).to.eql(\"updated_name\");",
									"    pm.expect(jsonData.data.description).to.eql(\"updated_description\");",
									"    pm.expect(jsonData.data.status).to.eql(\"disabled\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"updated_name\",\r\n  \"description\": \"updated_description\",\r\n  \"status\": \"disabled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating app detail with an invalid app Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"updated_name\",\r\n  \"description\": \"updated_description\",\r\n  \"status\": \"disabled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}invalid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating app detail with \"name\" is out of range 3-48 characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ab\",\r\n  \"description\": \"updated_description\",\r\n  \"status\": \"disabled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}invalid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating app detail with \"description\" is out of range 3-128 characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"updated_name\",\r\n  \"description\": \"ab\",\r\n  \"status\": \"disabled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}invalid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating app detail with \"status\" is not enabled/disabled",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"updated_name\",\r\n  \"description\": \"updated_description\",\r\n  \"status\": \"invalid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}invalid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting app with a valid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting app with an invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{content_type}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/apps/{{\bappId}}Invalid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"apps",
								"{{\bappId}}Invalid"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "value",
				"value": "123",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_token",
			"value": ""
		},
		{
			"key": "\bappId",
			"value": ""
		}
	]
}